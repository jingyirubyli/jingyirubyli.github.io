---
layout: post
title:  LAMP 架构
date:   2025-08-16
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: lamp.png # Add image post (optional)
tags: [Blog, Web]
author: # Add name author (optional)
---
# 本讲内容

LAMP: Linux + Apache(nginx) + Mysql + 后端程序(Php)

浏览器发出请求, web服务器apache有两个作用(提供静态资源展示, 转发请求给后端程序), 服务器进行动静分离判断, 如果是动态请求, php就向数据库查找.
<figure style="text-align: center;">
<img src="/assets/img/lamp1.png" alt="" width="400">
<figcaption>LAMP 架构</figcaption>
</figure>

Web服务器的作用: 将http请求从前端转发到后端应用上.

Php: 一种服务器脚本语言, 主要用于web开发, 常用php脚本嵌入html源码中执行.


## MacOS 配置 LAMP

### Apache

Mac原生自带apache, 检查命令:

```
httpd -v
sudo apachectl -k start # 启动apache
```

<figure style="text-align: center;">
<img src="/assets/img/lamp2.png" alt="" width="400">
<figcaption>apache</figcaption>
</figure>

### Php

```
brew install php
php -v
# 浏览器可以访问 http://localhost
```

### apache适配php

在 macOS Monterey 之后，Apple 已经移除了系统自带的 PHP, 如果 是 macOS Catalina 或更早版本, macOS 自带了 PHP，只是默认没有启用, 需要在 /etc/apache2/httpd.conf 中找到下面这行（大概在 170 行附近）：

```
#LoadModule php7_module libexec/apache2/libphp7.so 
# 取消上行注释
sudo apachectl restart  # 重启
```

如果是 macOS Monterey (12) 或之后, Apple 已经彻底移除了 PHP, 所以 /etc/apache2/httpd.conf 里面 不会有任何 PHP 配置。

参考[php官方介绍][php-mac]

[php-mac]: https://www.php.net/manual/zh/install.macosx.bundled.php

我查了好久方法, 发现不需要多做操作, 直接在httpd.conf中确认好DocumentIndex路径, 在对应路径中写.php就可以, 比如我写了一个index.php, 浏览器访问http://localhost/index.php:


<figure style="text-align: center;">
<img src="/assets/img/lamp3.png" alt="" width="400">
<figcaption>php配置</figcaption>
</figure>

---

## MacOS 配置 discuz

先贴一个[Discuz!官网][discuz]:

[discuz]: https://www.discuz.vip/download

<figure style="text-align: center;">
<img src="/assets/img/lamp4.png" alt="" width="400">
<figcaption>之前不是用brew安装的mysql</figcaption>
</figure>

### 检查版本

**apache**

系统自带apache默认网站根目录: /Library/WebServer/Documents/
里面有两个文件: index.html和index.php

系统自带 Apache 的主配置文件: /etc/apache2/httpd.conf

<figure style="text-align: center;">
<img src="/assets/img/lamp5.png" alt="" width="400">
<figcaption>查看版本</figcaption>
</figure>

检查apache是否正常工作: sudo apachectl restart

<figure style="text-align: center;">
<img src="/assets/img/lamp8.png" alt="" width="400">
<figcaption>检查apache是否正常工作</figcaption>
</figure>

**检查php**

php是不需要动的, 配置需要修改apache的conf: /etc/apache2/httpd.conf

前面说过新版本的mac os 删除了自带的配置行

#LoadModule php7_module libexec/apache2/libphp7.so

set nu:

70/71行是php配置.

LoadModule php_module /opt/homebrew/opt/php/lib/httpd/modules/libphp.so

464行添加: AddType application/x-httpd-php .php

467-470添加:

```
<IfModule php_module>
    AddType application/x-httpd-php .php
    AddType application/x-httpd-php-source .phps
</IfModule>
```

*试过不行*


如果没有用sudo打开vim, 可以在vim编辑后使用强制命令:w !sudo tee % >/dev/null

**mysql**

我看了一下装的所有mysql:

<figure style="text-align: center;">
<img src="/assets/img/lamp6.png" alt="" width="400">
<figcaption>查找mysql</figcaption>
</figure>

发现一个是anaconda, 一个是刚刚brew装的.

应该是因为这个原因, 所以我修改/Library/WebServer/Documents/index.php配置, 不能正常显示phpinfo页面.

<figure style="text-align: center;">
<img src="/assets/img/lamp7.png" alt="" width="400">
<figcaption>index.php</figcaption>
</figure>


### FlyEnv/PhpWebStudy

关闭apache进程: sudo apachectl stop

如果报重复使用错误, 手动关闭:

sudo kill -9 22524 

<figure style="text-align: center;">
<img src="/assets/img/lamp9.png" alt="" width="400">
<figcaption>手动关闭apache端口, 在FlyEnv中打开</figcaption>
</figure>

现在测试网址已经变成了我们设置的 http://mydomain.tld

## 我服了,一配第三方,我原先配好的本地网址都乱了, 一下午了都没找到解决办法. 现在一打开localhost是空白, 改一下httpd.conf再访问就自动下载位置文件. 真服了. 

插一句, 刚刚检查的时候发现homebrew的镜像源被指定成了阿里云, 可能导致某些错误.

1. 先检查homebrew 核心仓库 url:

```
git -C "$(brew --repo homebrew/core)" remote -v
```

如果输出类似:

origin  https://mirrors.aliyun.com/homebrew/homebrew-core.git (fetch)
origin  https://mirrors.aliyun.com/homebrew/homebrew-core.git (push)

如果是第三方源, 切换回官方源:

```
git -C "$(brew --repo)" remote set-url origin https://github.com/Homebrew/brew.git
git -C "$(brew --repo homebrew/core)" remote set-url origin https://github.com/Homebrew/homebrew-core.git
```

说明你当前走的是 阿里云镜像。如果输出是：
origin  https://github.com/Homebrew/homebrew-core.git (fetch)
origin  https://github.com/Homebrew/homebrew-core.git (push)

说明你已经在使用官方源。

2. 检查Bottle (二进制包) 下载源

```
echo $HOMEBREW_BOTTLE_DOMAIN
```

如果输出是 https://mirrors.aliyun.com/...，说明安装 nginx 时会从阿里云下载二进制包。如果输出为空或未设置，则使用默认官方源。

如果是第三方镜像, 切换回官方并更新:

```
unset HOMEBREW_BOTTLE_DOMAIN
unset HOMEBREW_PIP_INDEX_URL
source ~/.zshrc
brew update
```

在/Users/jingyili中编辑.zprofile:

<figure style="text-align: center;">
<img src="/assets/img/lamp10.png" alt="" width="400">
<figcaption>换官方源</figcaption>
</figure>


总结: 一句话, 服了.