---
layout: post
title:  MacOS 配置 Apache
date:   2025-08-19
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: apache.png # Add image post (optional)
tags: [Blog]
author: # Add name author (optional)
---
# 本讲内容

本来不想继续配apache的, 毕竟前几天的经历太抓马了. 但是昨天晚上准备睡觉的时候又搜了一下教程, 发现youtube上也几乎没有用mac原生apache配置的, 一些介绍文章也是说避免使用原生, 因为它删掉了一些必要的东西. 说的也是, 今天就试试brew装一个吧.

---

## 问题回顾

先介绍一下现在机器的状况: 昨天使用原生apache配置失败, 访问 localhost 找不到服务器, 检查过配置文件没找到原因. 后来配置nginx时偶然发现可能是安装源不对, 所以切换回官方源配置好了nginx, 可以正常运行. 现在尝试配置apache.

先检查原生 apache 状态: 可以看到直接启动失败

<figure style="text-align: center;">
<img src="/assets/img/apache1.png" alt="" width="400">
<figcaption>直接启动失败</figcaption>
</figure>

所以下一步尝试 brew 安装 httpd 并启动, 但是正常安装后无法启动:

<figure style="text-align: center;">
<img src="/assets/img/apache2.png" alt="" width="400">
<figcaption>brew启动apache</figcaption>
</figure>

此时意识到可能是昨天的nginx端口同样是8080未关, 所以运行brew services stop nginx 后重启 apache, 但是仍然无法找到运行端口: 

<figure style="text-align: center;">
<img src="/assets/img/apache3.png" alt="" width="400">
<figcaption>重启apache失败</figcaption>
</figure>

在这里发现一个很奇怪的点: 因为现在机器上有两个apache, 一个是MacOS自带的原生apache, 另一个是刚刚 brew 安装的apache, 所以我首先尝试的是运行原生apache: sudo apachectl restart, 但是报错 AH00558. 可是我明明修改过原生的http.conf的 ServerName. 但是后来发现这个报错是针对 brew 安装的 apache, 因为修改 /opt/homebrew/etc/httpd/httpd.conf 中的ServerName之后就不再报 AH00558 了.

<figure style="text-align: center;">
<img src="/assets/img/apache4.png" alt="" width="400">
<figcaption>修改了/opt/homebrew/etc/httpd/httpd.conf</figcaption>
</figure>

这里总结一点吧: 不要直接运行 sudo apachectl restart, 要加上路径, 否则会造成很多问题....


## 配置 Apache

我们已经使用 homebrew 安装了 apache, 建议使用以下命令, 会避免一些不知名的错误:

```
sudo /opt/homebrew/opt/httpd/bin/httpd -k restart
```     

此时访问 http://localhost, 仍然显示nginx页面, 开始我以为是端口问题, 因为nginx和apache默认都是8080. 但是我已经关掉了nginx, 按理说端口已经不影响. 后来发现二者的html目录都放在/opt/homebrew/var/www, 其中就是我之前用过的nginx配置. 所以我们只需要单独为apache新建一个目录即可:

<figure style="text-align: center;">
<img src="/assets/img/apache5.png" alt="" width="400">
<figcaption>新建与/www平行的目录/apache</figcaption>
</figure>


```
mkdir -p /opt/homebrew/var/apache
# 编辑 Apache 配置 /opt/homebrew/etc/httpd/httpd.conf
DocumentRoot "/opt/homebrew/var/apache"
<Directory "/opt/homebrew/var/apache">
    ...
</Directory>
# 重启
sudo /opt/homebrew/opt/httpd/bin/httpd -k restart
# 在 /opt/homebrew/var/apache 放测试页面
```

访问 http://localhost 就显示 Apache 内容，不受 nginx 文件影响。所以总结: /opt/homebrew/var/www 之前被 nginx 使用过，所以里面是 nginx 页面。Apache 默认也用这个目录，所以你看到 nginx 页面。最安全做法是 为 Apache 设置独立 DocumentRoot，避免和 nginx 冲突。

**注意: 此时apache端口为80, nginx为8080.**