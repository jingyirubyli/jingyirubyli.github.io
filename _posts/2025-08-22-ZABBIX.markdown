---
layout: post
title:  Zabbix
date:   2025-08-22
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: zabbix.png # Add image post (optional)
tags: [Blog, Web]
author: # Add name author (optional)
---
# 本讲内容

- [本讲内容](#本讲内容)
  - [Zabbix 介绍](#zabbix-介绍)
    - [zabbix的构成](#zabbix的构成)
    - [zabbix的监控对象](#zabbix的监控对象)
    - [zabbix的常用术语](#zabbix的常用术语)
  - [Zabbix 安装和配置](#zabbix-安装和配置)
    - [安装](#安装)


---

## Zabbix 介绍

### zabbix的构成

zabbix主要由以下5个组件构成：

1、Server

zabbix server是zabbix的核心组件，server内部存储了所有的配置信息、统计信息和操作信息。zabbix agent会向zabbix server报告可用性、完整性及其他统计信息。

2、web页面

web页面也是zabbix的一部分，通常和zabbix server位于一台物理设备上，但是在特殊情况下也可以分开配置。web页面主要提供了直观的监控信息，以方便运维人员监控管理。

3、数据库

zabbix数据库内存储了配置信息、统计信息等zabbix的相关内容。

4、proxy

zabbix proxy可以根据具体生产环境进行采用或者放弃。如果使用了zabbix proxy，则其会替代zabbix server采集数据信息，可以很好的分担zabbix server的负载。zabbix proxy通常运用与架构过大、zabbix server负载过重，或者是企业设备跨机房、跨网段、zabbix server无法与zabbix agent直接通信的场景。

5、Agent

zabbix agent通常部署在被监控目标上，用于主动监控本地资源和应用程序，并将监控的数据发送给zabbix server。


### zabbix的监控对象

zabbix支持监控各种系统平台，包括Linux和Windows等主流操作系统，也可以借助SNMP或者是SSH协议监控路由交换设备。

zabbix如果部署在服务器上，可以监控其CPU、内存、网络性能等硬件参数，也可以监控具体的服务或者应用程序、服务运行情况及性能。

硬件监控：Zabbix IPMI Interface ，通过IPMI接口进行监控，我们可以通过标准的IPMI硬件接口，监控被监控对象的物理特征，比如电压、温度、风扇状态、电源状态等。

系统监控：Zabbix Agent Interface ，通过专用的代理程序进行监控，与常见的master/agent模型类似，如果被监控对象支持对应的agent，推荐首选这种方式。

Java监控：Zabbix JMX Interface ，通过JMX进行监控，JMX（java management extensions，即java管理扩展），监控JVM虚拟机时，使用这种方法是非常不错的选择。

网络设备监控：Zabbix SNMP Interface ，通过SNMP协议与被监控对象进行通信，SNMP协议的全称为simple network management protocol，被译为简单网络管理协议，通常来说，我们无法在路由器、交换机这种硬件上安装agent，但是这些硬件都支持SNMP协议。

应用服务监控：Zabbix Agent UserParameter

MySQL数据库监控：percona-monitoring-plulgins   

URL监控：Zabbix Web 监控


### zabbix的常用术语

1、主机（host）

要监控的设备，可以由IP或者是主机名（必须可解析）指定。

2、主机组（host group）

主机的逻辑容器，包含主机和模板，主机组通常在给用户或者是用户组指派监控权限时使用。

3、监控项（item）

一个特定监控指标的相关数据，比如内存的大小、CPU的使用率，甚至是服务的运行状态等等。监控项数据来源于被监控对象，并且每个监控项都由一个key来标识。

4、触发器（trigger）

一个表达式，用于评估监控项的值是否在合理的范围内。当接收的值超出触发器的规定时，就被认为是故障，如果超出后再次符合，就被认为是正常。

5、事件（event）

触发器触发的一个特定事件，或者是zabbix定义的一个自动上线注册主机的事件。

6、动作（action）

指根据配置，zabbix对于触发器触发的特定事件进行处理的具体措施，如执行某个脚本，或者是向管理员邮箱发送邮件等等。

7、报警升级（escalation）

发送警报或者是执行远程命令的自定义方案。

8、媒介（media）

发送通知（告警）的手段，如微信、邮件、钉钉等等。

9、通知（notification）

通过指定的媒介，向用户发送的有关事件的信息。

10、远程命令（remote command）

指运维人员提前写好的命令，可以让被监控主机在触发事件后执行。

11、模板（template）

用于快速定义被监控主机的预设条目集合，通常包括了监控项、触发器、应用等，模板可以直接链接至某个主机。

12、应用（application）

一组监控项的集合。

13、web场景（web scennario）

用于检测web站点可用性的一个或多个HTTP请求。

14、前端（frontend）

zabbix的web接口。


zabbix程序组件
- Zabbix_server，服务端守护进程
- Zabbix_agentd， agent守护进程
- zabbix_proxy，代理服务器
- zabbix_database，存储系统，mysql, pgsql
- Zabbix_web， web GUI图形化界面
- Zabbix_get，命令行工具，测试向agent发起数据采集请求
- Zabbix_sender，命令行工具，测试向server发送数据
- Zabbix_java_gateway, java网关


---

## Zabbix 安装和配置

仔细读官方文档: [Zabbix中文文档][中文]
[Zabbix英文文档][英文]

[中文]: https://www.zabbix.com/documentation/current/zh/manual/installation/
[英文]: https://www.zabbix.com/documentation/current/en/manual/installation/


### 安装

**看从源代码安装部分:**

> 需要命令行开发人员工具（不需要Xcode），Automake，pkg-config和PCRE（v8.x）或PCRE2（v10.x）。如果要使用TLS构建 agent 二进制文件，则还需要 OpenSSL 或 GnuTLS。

安装 Automake 和 pkg-config：

```
$ brew install automake
$ brew install pkg-config
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix2.png" alt="" width="500">
<figcaption>检查安装</figcaption>
</figure>

> 如何准备 PCRE、OpenSSL 和 GnuTLS 库取决于它们如何链接到 agent。 如果您打算在已具有这些库的 macOS 计算机上运行代理二进制文件，则可以使用 Homebrew 提供的预编译库。这些通常是 macOS 机器，它们使用 Homebrew 来构建 Zabbix agent 二进制文件或用于其他目的。如果 agent 的二进制文件将在没有共享版本的库的 macOS 计算机上使用，则应从源代码编译静态库，并将 Zabbix agent与它们链接。

我理解这段话是如果机器上已经存在这几个包, 直接用就行. 如果没有就需要自己安装一下. 

**使用共享库构建 agent 二进制文件**

安装命令:

```
# 安装 PCRE2 (如果需要的话，在下面的命令中将 pcre2 替换为 pcre )：
$ brew install pcre2
# 使用TLS构建时，请安装OpenSSL和/或GnuTLS：
$ brew install openssl
$ brew install gnutls
```

检查一下机器上有没有这几个包:

```
% brew list pcre2
% brew list openssl
# openssl 和 gnutls 二选一即可, 我机器上就没有gnutls
% brew list gnutls
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix3.png" alt="" width="500">
<figcaption>检查pcre2</figcaption>
</figure>

<figure style="text-align: center;">
<img src="/assets/img/zabbix4.png" alt="" width="500">
<figcaption>检查openssl</figcaption>
</figure>

查看版本:

```
% pcre2grep --version
% pcre2-config --version
% openssl version
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix5.png" alt="" width="500">
<figcaption>检查pcre2和openssl版本</figcaption>
</figure>

下载 Zabbix 源代码, 注意不能在根目录(只读权限)安装.

```
$ git clone https://git.zabbix.com/scm/zbx/zabbix.git
# 可以看到从官网安装报错
$ git clone https://github.com/zabbix/zabbix.git
# 从github下载成功
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix6.png" alt="" width="500">
<figcaption>zabbix.com 下载 Zabbix 源代码</figcaption>
</figure>

<figure style="text-align: center;">
<img src="/assets/img/zabbix7.png" alt="" width="500">
<figcaption>github 下载 Zabbix 源代码</figcaption>
</figure>

**不使用 TLS 构建 agent：**

我使用openssl, 所以这里只贴一下官方文档的代码.

```
$ cd zabbix
$ ./bootstrap.sh
$ ./configure --sysconfdir=/usr/local/etc/zabbix --enable-agent --enable-ipv6
$ make
$ make install
```

**使用 OpenSSL 构建 agent：**

```
$ cd zabbix
$ ./bootstrap.sh
# 注意下面这行要按自己的配置写路径
$ ./configure --sysconfdir=/usr/local/etc/zabbix --enable-agent --enable-ipv6 --with-openssl=/usr/local/opt/openssl
$ make
$ make install
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix8.png" alt="" width="500">
<figcaption>./bootstrap.sh</figcaption>
</figure>

我使用的命令:

```
# 注意openssl路径, 上面我们查到的是 openssl@3, 这里就使用 openssl@3
./configure --sysconfdir=/usr/local/etc/zabbix --enable-agent --enable-ipv6 --with-openssl=/opt/homebrew/opt/openssl@3
```

<figure style="text-align: center;">
<img src="/assets/img/zabbix9.png" alt="" width="500">
<figcaption>Thank you for using Zabbix!</figcaption>
</figure>

其实这里我修改了几次路径, 最后还是用了最初的命令. 按理说只要自己能搞清楚路径分别在哪里就行.

记录一下我最后一次 ./configure 后输出的config:

```
Configuration:

  Detected OS:           darwin24.6.0
  Install path:          /usr/local
  Compilation arch:      osx

  Compiler:              gcc
  Compiler flags:         -g -O2 -I/opt/homebrew/Cellar/pcre2/10.45/include

  Library-specific flags:
    libpcre2:              -I/opt/homebrew/Cellar/pcre2/10.45/include
    TLS:                   -I/opt/homebrew/opt/openssl@3/include

  Enable server:         no

  Enable proxy:          no

  Enable agent:          yes
  Agent details:
    TLS:                   OpenSSL
    Modbus:                no
    Linker flags:             -L/opt/homebrew/opt/openssl@3/lib   -rdynamic  -L/opt/homebrew/Cellar/pcre2/10.45/lib 
    Libraries:                -lssl -lcrypto   -lpcre2-8 -lpthread -lm  -lresolv -liconv
    Configuration file:    /usr/local/etc/zabbix/zabbix_agentd.conf
    Modules:               /usr/local/lib/modules

  Enable agent 2:        no

  Enable web service:    no

  Enable Java gateway:   no

  LDAP support:          no
  IPv6 support:          yes
  cmocka support:        no

  yaml support:          no

***********************************************************
*            Now run 'make install'                       *
*                                                         *
*            Thank you for using Zabbix!                  *
*              <https://www.zabbix.com>                   *
***********************************************************
```


下一步是 install, 根据指引, 依次运行:

```
$ make
# make 一般不会报错
$ make install
# 如果报权限错误, 使用 sudo make install. 我就是因为这个权限错误改了几次路径, 发现都不成功, 最终只能使用sudo
```

检查:

```
which zabbix_agentd
which zabbix_sender
which zabbix_get
```

修改 /usr/local/etc/zabbix/zabbix_agentd.conf 中的 server 地址为本机地址.

启动apache, 按官方文档，将zabbix需要的文件复制到指定的web目录下. 我的zabbix目录安装位置在: /Users/jingyili/Projects/zabbix, 要把这个文件放在apache有权限处理的web目录: /opt/homebrew/var/apache/

需要找的zabbix.php路径在: /opt/homebrew/var/apache/zabbix/ui/zabbix.php

所以需要编辑一下apache的.conf文件, 添加该路径: sudo vim /opt/homebrew/etc/httpd/httpd.conf 

添加以下内容:

```
Alias /zabbix "/opt/homebrew/var/apache/zabbix/ui"

<Directory "/opt/homebrew/var/apache/zabbix/ui">
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>
```

重启apache, 即可访问 http://localhost/zabbix

<figure style="text-align: center;">
<img src="/assets/img/zabbix10.png" alt="" width="500">
<figcaption>成功访问zabbix.php</figcaption>
</figure>

<figure style="text-align: center;">
<img src="/assets/img/zabbix11.png" alt="" width="500">
<figcaption>成功打开zabbix主页</figcaption>
</figure>