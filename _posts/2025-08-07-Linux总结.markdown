---
layout: post
title:  Linux总结
date:   2025-08-07
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: linux.png # Add image post (optional)
tags: [Blog]
author: # Add name author (optional)
---
# 本讲内容

Linux: 一套开源的C语言文件, 支持多用户同时操作, 多任务, 支持多CPU, 多线程的操作系统, 类Unix(Unix使用收费,商业化). 主要用在服务器端、 无人机/物流机器人等嵌入式开发、 个人PC桌面等.

指令(人发明的) --> shell/bash解释器 --> 计算机可以理解的机器码 --> 计算机硬件识别机器码并执行动作 --> 输出结果,用户看到结果 

Unix技术成熟,可靠性高, 可伸缩性强, 支持很多CPU架构包括intel/amd/hp等. 强大的网络功能: TCP/IP协议就是基于Unix开发. 强大的数据库能力: Oracle/DB2/mysql等. 强大的开发能力: C/java等

<figure style="text-align: center;">
<img src="/assets/img/linux1.png" alt="" width="500">
<figcaption>Unix-Linux-iOS-Andorid-鸿蒙</figcaption>
</figure>

自由软件: 没有商业化的版权制约, 源代码自由开放, 可以自由传播. 比如redhat linux自由传播,但不免费完全使用. centos linux是自由传播且完全免费.

自由软件基金会FSF(free software foundation) 发起 [GNU][gnu] 活动: 建立一套完全自由可移植的类Unix操作系统. gnu的组件迁移到了linux, 如gcc编译器, bash解释器, gawk命令等.

[gnu]: https://www.gnu.org

GPL(General Public License) 通用公共许可

---

## Linux

### 命令

-a: all, 列出所有文件包括隐藏文件

-l: 列出详细信息

whoami: 显示当前登录的用户

hostname: 显示当前机器的主机名

pwd: 显示当前的工作目录绝对路径


### 目录结构

第一个/表示根目录, 后面的/表示分割.

<figure style="text-align: center;">
<img src="/assets/img/linux2.png" alt="" width="500">
<figcaption>文件目录</figcaption>
</figure>

**/:**
根目录

顾名思义，根目录就是所有目录所在的目录，它是Linux中所有目录的根，从某种概念上讲，它有点类似于Windows中的磁盘驱动器符号。之后将会看到，所有其他目录都是以/开头的。

**/bin：**
存放重要的用户二进制文件目录

bin是binary的缩写，/bin目录存放了非常重要的用户二进制文件，其实就是一些程序。需要特别说明的是，/bin中存放的都是在单用户维护模式下还能被操作的命令，这些命令可以被root和普通用户使用。在/bin中我们可以看到例如chmod、du这些我们经常使用的Linux命令程序。bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令.

**/boot：**
存放系统启动时需要文件的目录

/boot中存放的主要是系统启动时需要用到的文件，比如EFI、GRUB以及Linux内核。这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。

**/dev ：**
设备文件目录. Linux将所有东西都看成文件，设备也不例外，不论是实体的硬件设备还是虚拟设备。实体硬件比如第一块被检测到的硬盘会被挂载到/dev/sda，第二块会被挂载到/dev/sdb，以此类推。虚拟设备比如null、random、stderr、stdin和stdout。
dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。

**/etc：**
配置文件目录

etc的含义是Et cetera，表示一些相关的其他东西，/etc从UNIX早期开始就被用来存放配置文件，一直沿用至今。需要注意的是，/etc中存放的是系统配置文件，特定用户的配置文件放在每个用户的/home目录下。etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。

**/home：**
用户目录

/home目录中存放的是每个用户的用户目录，比如有一个用户叫tom，/home/tom就是他的用户目录，每个用户的用户目录中存放的用户数据和用户配置文件，比如每个用户的.bashrc文件、.ssh目录等。普通用户只能访问自己的用户目录而不能访问别人的，root用户则没有此限制。
用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。

**/lib：**
重要的共享库目录

/lib目录中存放的是/bin和/sbin中那些重要的二进制文件（程序）需要的共享库。另外/usr/bin中二进制文件（程序）需要的共享库都存放在/usr/lib。lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。

**/lost+found：**
恢复文件目录

每个Linux文件系统都有/lost+found目录，当文件系统崩溃时，在下次启动时将会进行文件系统自检，任何在崩溃过程中损坏的文件都将被放入/lost+found，你可以尝试找到并恢复这些文件。这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。

**/media：**
可删除媒介目录

当你将一些可删除媒介挂（比如CD，U盘，光驱等）载到计算机上时，系统会在/media下自动创建子目录，之后就可以通过访问这个子目录来访问媒介。比如你在电脑上插入CD，在/media目录下就会自动生成一个子目录，你可以通过访问这个子目录来访问CD的内容。linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。

**/mnt：**
临时挂载点目录

mnt是mount的缩写，各种设备挂载到系统后，会在/mnt目录下生成相应设备的目录，比如挂载光驱、文件系统、CD等。
系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。

**/opt：**
可选包目录

opt是Optional的意思，系统中安装的可选软件包被存放在/opt目录中。opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。
**/proc：**
内核和进程文件目录

/proc是一个虚拟目录，并不包含任何标准文件。当系统启动后，会对当前内核和硬件信息进行检测，并将这些信息放在这个目录中（其实都在内存中）。你可以使用cat /proc/meminfo来查看关于内存的一些信息，或者使用cat /proc/version来查看Linux内核信息。proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。
这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：

```
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_all
```

**/root：**
root用户的home目录

和一般用户的home目录放在/home/{用户名}不同，root用户的home目录专门被放在/root。该目录为系统管理员，也称作超级权限者的用户主目录。

**/run：**
应用程序状态目录

/run目录用来存放应用程序在运行期间需要的一些短暂存在的文件，比如socket和pid文件，这些文件对这些应用程序的运行很重要，因此不能把他们放在/tmp目录下，因为/tmp目录下的文件有可能会被系统清空。是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让它指向 run。

**/sbin：**
系统管理员用的二进制文件目录

/sbin目录和/bin目录有些类似，都是存放二进制文件。比较特殊的是，/sbin目录存放的都是系统管理的命令程序，一般只有root用户能使用。s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。

**/srv：**
服务数据目录

/srv目录主要用来存放一些系统提供的网络服务的数据，如果你在机器上运行一个HTTP服务器来对外提供静态文件时，/srv/http目录将存放这些静态文件，如果你运行一个FTP服务器对外提供文件，则/srv/ftp目录将存放这些文件。

该目录存放一些服务启动之后需要提取的数据。

**/tmp：**
临时文件目录

应用程序会将一些临时文件存放在/tmp目录中，一般来说当系统重启后，/tmp下的文件会被自动清空，也会被一些监控程序清空。tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。

**/usr：**
用户二进制文件和只读文件目录

/usr目录下存放的是用户使用的程序，可以很明显地发现，Linux将普通用户和系统使用的程序分开存放，比如上面提到过，系统使用的一些重要程序存放在/bin，而那些不重要的程序就被放在/usr/bin。不太重要的系统管理程序存放在/usr/sbin而不是/sbin。usr也被称为UNIX Software Resource，这是比较早期的说法。下面是/usr目录下常见的几个子目录的含义：

- /usr/bin 存放用户命令
- /usr/include 存放编程语言的头文件和包含文件
- /usr/lib 存放各个应用程序的库函数和目标文件
- /usr/local 存放系统管理员下载的软件的安装目录
- /usr/sbin 存放不常用的系统命令
- /usr/src 存放源码
usr 是 unix system resources(unix 系统资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。

**/var：**
变动数据目录

/var一般用来存放经常变动的数据，比如日志文件和缓存文件。下面是/var目录下常见的几个子目录的含义：

- /var/cache 存放应用程序运行产生的临时文件
- /var/lib 存放程序在执行过程中需要使用到的数据文件，每个软件在此目录下都有自己独自的目录
- /var/lock 存放程序的锁状态
- /var/log 存放各种日志文件
- /var/mail 存放个人电子邮箱
- /var/run 有些程序在运行后，会将他们的pid、socket文件放置到这个目录中

var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。

**/selinux：**
 这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。

**/sys：**
这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。
sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。
该文件系统是内核设备树的一个直观反映。
当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。



在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。
/etc： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。
/bin, /sbin, /usr/bin, /usr/sbin: 这是系统预设的执行文件的放置目录，比如 ls 就是在 /bin/ls 目录下的。
值得提出的是 /bin、/usr/bin 是给系统用户使用的指令（除 root 外的通用用户），而/sbin, /usr/sbin 则是给 root 使用的指令。
/var： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 /var/log 目录下，另外 mail 的预设放置也是在这里。

### 一些重要的配置文件(etc中)

在 macOS 上，找不到 /etc/sysconfig 这个目录，是因为它是 Linux（尤其是 Red Hat/CentOS 系列） 特有的配置目录，macOS 并没有这个路径。

macOS 基于 BSD（Darwin 内核），系统配置文件的位置和结构与 Linux 不同，所以对应的配置通常在这些地方：

|      **Linux /etc/sysconfig 的作用**     |                 **macOS 对应位置/文件**                 |
|:----------------------------------------:|:-------------------------------------------------------:|
| 网络配置 /etc/sysconfig/network-scripts/ |  /etc/hosts、/etc/resolv.conf，或用 系统偏好设置 → 网络 |
|               系统服务配置               | /Library/LaunchDaemons/、/System/Library/LaunchDaemons/ |
|               环境变量设置               |              ~/.zshrc（或 ~/.bash_profile）             |

如果将 /etc/resolv.conf中的nameserver注释掉,那么他就没有域名解析功能了, 此时ping baidu.com 会报错: 未知的名称或服务. 但是他仍然可以上网, 因为可以ping公网ip

<figure style="text-align: center;">
<img src="/assets/img/linux3.png" alt="" width="500">
<figcaption>ping baidu.com</figcaption>
</figure>

Linux直接用 cat /etc/hostname 读取主机名称. MacOS 会在 /etc/hosts 和 /etc/hostname 里保存信息，不过很多时候 /etc/hostname 并不存在，因为主机名是动态从系统设置里读的。可以用 scutil 命令（macOS 专用）:

```
scutil --get HostName      # 系统自定义的主机名
scutil --get LocalHostName # Bonjour 名称
scutil --get ComputerName  # 在“共享”里显示的名字
```

<figure style="text-align: center;">
<img src="/assets/img/linux4.png" alt="" width="500">
<figcaption>hostname</figcaption>
</figure>

<figure style="text-align: center;">
<img src="/assets/img/linux5.png" alt="" width="500">
<figcaption>cat hosts</figcaption>
</figure>

Linux中的motd文件会显示welcome, 在 macOS 上，/etc/motd（Message of the Day）文件确实存在，不过默认是空的或不存在，因为 macOS 登录时不会像传统 Linux 一样自动显示 MOTD，需要你用 ssh localhost 登录本机才会看到。总之如果你是想找 Linux 教程里那种 SSH 登录显示 MOTD 的效果，macOS 上要么改 /etc/motd 并通过 SSH 登录，要么在 shell 启动文件里自己加显示逻辑。那个喜闻乐见的佛祖保佑就是这么做的.

cat /etc/os-release输出当前机器版本信息. MacOS使用命令: 

```
sw_vers     # 简略信息
system_profiler SPSoftwareDataType # 详细信息
```

<figure style="text-align: center;">
<img src="/assets/img/linux6.png" alt="" width="500">
<figcaption>MacOS 查看版本信息</figcaption>
</figure>

Linux中/proc/cpuinfo保存CPU相关信息, /proc/meminfo保存内存相关信息. 在 macOS 上找不到 /proc 目录，因为那是 Linux 内核提供的 procfs（proc 文件系统），用来以文件形式暴露内核和进程信息。macOS 基于 BSD/Darwin 内核，没有挂载 /proc，所以：

| **Linux /proc 内容** |      **macOS 替代方法**      |
|:--------------------:|:----------------------------:|
|     /proc/cpuinfo    |          `sysctl -a          |
|     /proc/meminfo    |        vm_stat 或 top        |
| /proc/[pid] 进程信息 | ps -p <PID> -o pid,ppid,comm |
|     /proc/mounts     |             mount            |
|     /proc/uptime     |            uptime            |
|     /proc/version    |           uname -a           |
